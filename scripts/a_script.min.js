const{createClient:createClient}=supabase,supabaseUrl="https://lqznaoovmqsfipptlktu.supabase.co",supabaseKey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxxem5hb292bXFzZmlwcHRsa3R1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODkwMTQzMzksImV4cCI6MjAwNDU5MDMzOX0.CXn7Be_747VSWkg6JQ0LLm6AmQeCmSqRxrSRNatfoL0",TABLENAME="websites",containerId="allBookmarks",supaClient=createClient(supabaseUrl,supabaseKey),tableHeader='\n<div class="sameasLi">\n<span>Id</span>\n<span>Título</span>\n<span>Etiquetas</span>\n<span>...</span>\n</div>',loginButon=document.getElementById("signInBtn"),logoutButton=document.getElementById("signOutBtn"),whenSignedIn=document.querySelectorAll(".whenSignedIn"),whenSignedOut=document.querySelectorAll(".whenSignedOut"),userDetails=document.getElementById("userDetails"),myThingsSection=document.getElementById("myThings"),myThingsList=document.getElementById("myThingsList"),allThingsSection=document.getElementById("allThings"),websitesList=document.getElementById(containerId),createThing=document.getElementById("createThing");let myThingsSubscription,emailListSubscription;console.log(whenSignedIn),whenSignedIn.forEach((e=>e.setAttribute("hidden",""))),whenSignedOut.forEach((e=>e.removeAttribute("hidden"))),loginButon.addEventListener("click",(()=>{supaClient.auth.signInWithOAuth({provider:"google"},{redirectTo:"http://localhost:5500"})})),createThing.addEventListener("click",(async()=>{const{data:{user:e}}=await supaClient.auth.getUser(),n=createRandomThing(e);console.log({thing:n}),await supaClient.from(TABLENAME).insert([n]),modal.callClose(),document.getElementById("urlInput").value="",document.getElementById("titleInput").value="",document.getElementById("descInput").value="",document.getElementById("pointsInput").value="",document.getElementById("tagsContainer").innerHTML="",tagsArray=[]})),logoutButton.addEventListener("click",(()=>{supaClient.auth.signOut()})),checkUserOnStartUp();const myThings={},allThings={};async function checkUserOnStartUp(){const{data:{user:e}}=await supaClient.auth.getUser();e?adjustForUser(e):adjustForNoUser()}async function adjustForUser(e){whenSignedIn.forEach((e=>e.removeAttribute("hidden"))),whenSignedOut.forEach((e=>e.setAttribute("hidden",""))),userDetails.innerHTML=`\n<h3>Hi ${e.user_metadata.full_name}</h3>\n<img class="avatar" src="${e.user_metadata.avatar_url} " onerror="this.onerror=null; this.src='http://placekitten.com/100/100';" />\n`,await getMyInitialThings(e),listenToMyThingsChanges(e)}function adjustForNoUser(){whenSignedOut.forEach((e=>e.removeAttribute("hidden"))),whenSignedIn.forEach((e=>e.setAttribute("hidden",""))),myThingsSection.hidden=!0,myThingsSubscription&&(myThingsSubscription.unsubscribe(),myThingsSubscription=null),emailListSubscription&&(emailListSubscription.unsubscribe(),emailListSubscription=null)}async function getAllInitialThings(){const{data:e}=await supaClient.from(TABLENAME).select();console.log({data:e});for(const n of e)allThings[n.id]=n;renderAllThings()}function renderAllThings(){const e=`\n  \n    \n  <div class="sameasLi">\n  <span>Id</span>\n  <span>Título</span>\n  <span>Etiquetas</span>\n  <span>...</span>\n  </div>\n    <ul>${Object.values(allThings).sort(((e,n)=>e.weight>n.weight?-1:1)).map((e=>`\n<li>\n  <span>${e.id}</span>\n  <a href="${e.url}">${e.title}</a>\n  <span class="tags">${e.tags}</span>\n  <a aria-hidden="true" class="desktop" href="${e.url}" target="_blank" rel="noopener noreferrer">...</a>\n\n</li>`)).join("")}</ul>`;websitesList.innerHTML=e,setTimeout((()=>{document.querySelector(".loadingScreen").classList.add("fade")}),700),setTimeout((()=>{document.querySelector(".loadingScreen").setAttribute("hidden","")}),1700)}function createRandomThing(e){const n=urlInput.value,t=titleInput.value,s=descInput.value,i=pointsInput.value?pointsInput.value:0;if(e)return{url:n,title:t,desc:s,tags:tagsArray,points:i,owner:e.id};console.error("Inicia sesión para poder agregar websites")}function handleAllThingsUpdate(e){"DELETE"===e.eventType?delete allThings[e.old.id]:allThings[e.new.id]=e.new,renderAllThings()}function listenToAllThings(){supaClient.channel(`public:${TABLENAME}`).on("postgres_changes",{event:"*",schema:"public",table:TABLENAME},handleAllThingsUpdate).subscribe()}async function getMyInitialThings(e){const{data:n}=await supaClient.from(TABLENAME).select("*").eq("owner",e.id);for(const e of n)myThings[e.id]=e;renderMyThings()}function handleMyThingsUpdate(e){"DELETE"===e.eventType?delete myThings[e.old.id]:myThings[e.new.id]=e.new,renderMyThings()}async function listenToMyThingsChanges(e){myThingsSubscription||(myThingsSubscription=supaClient.channel(`public:${TABLENAME}:owner=eq.${e.id}`).on("postgres_changes",{event:"*",schema:"public",table:TABLENAME,filter:`owner=eq.${e.id}`},handleMyThingsUpdate).subscribe())}function renderMyThings(){const e=`\n      \n  <div class="sameasLi">\n    <span>Id</span>\n    <span>Título</span>\n    <span>Etiquetas</span>\n    <span>...</span>\n  </div>\n\n    <ul>${Object.values(myThings).sort(((e,n)=>e.weight>n.weight?-1:1)).map((e=>`\n<li>\n  <span>${e.id}</span>\n  <a href="${e.url}">${e.title}</a>\n  <span class="tags">${e.tags}</span>\n  <span>${deleteButtonTemplate(e)}</span>\n</li>`)).join("")}</ul>\n`;myThingsList.innerHTML=e}function deleteButtonTemplate(e){return`\n<button\n  onclick="deleteAtId(${e.id})"\n  class=""\n>\n    ${trashIcon}\n</button>`}async function deleteAtId(e){console.log("i exist"),await supaClient.from(TABLENAME).delete().eq("id",e)}getAllInitialThings().then((()=>listenToAllThings())),supaClient.auth.onAuthStateChange(((e,n)=>{n?.user?adjustForUser(n.user):adjustForNoUser()}));const trashIcon='<svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="currentColor" d="m9.4 16.5l2.6-2.6l2.6 2.6l1.4-1.4l-2.6-2.6L16 9.9l-1.4-1.4l-2.6 2.6l-2.6-2.6L8 9.9l2.6 2.6L8 15.1l1.4 1.4ZM7 21q-.825 0-1.413-.588T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.588 1.413T17 21H7Z"/></svg>',buttons=document.querySelectorAll("[aria-controls]");function toggleContent(e){const n=e.getAttribute("aria-controls"),t=document.getElementById(n);if(t){const n="true"===e.getAttribute("aria-expanded");e.setAttribute("aria-expanded",!n),t.hidden=n}e.classList.contains("on")&&!t.hidden&&t.scrollIntoView({behavior:"smooth",block:"start"}),e.classList.contains("on")&&t.hidden&&setTimeout((()=>{t.scrollIntoView({behavior:"smooth",block:"end"})}),3e3)}function scrollTrigger(e,n={}){let t=document.querySelectorAll(e);t=Array.from(t),t.forEach((e=>{addObserver(e,n)}))}function addObserver(e,n){if(!("IntersectionObserver"in window))return void(n.cb?n.cb(e):entry.target.classList.add("active"));new IntersectionObserver(((t,s)=>{t.forEach((t=>{if(t.isIntersecting){if(n.cb)n.cb(e);else{t.target.classList.add("active");const e=t.target.getAttribute("aria-expanded");e&&console.log({aaa:e})}s.unobserve(t.target)}}))}),n).observe(e)}buttons.forEach((e=>{e.addEventListener("click",(()=>toggleContent(e)))})),scrollTrigger(".scroll-reveal",{rootMargin:"-200px"});